#!/data/data/com.termux/files/usr/bin/bash

# Function to display usage information
display_usage() {
	echo -e "Usage: \e[01;33mtermux-fix-shebang\e[0m [\e[01;32moptions\e[0m] <files>"
	echo -e
	echo -e "Rewrite shebangs for \e[01;33mTermux\e[0m to:"
	echo -e "\e[01;36m#!/data/data/com.termux/files/usr/bin/binary\e[0m."
	echo -e
	echo -e "Options:"
	echo -e "  \e[01;32m-a\e[0m, \e[01;32m--all\e[0m          Edit shebang of every file in all subdirectories"
	echo -e "  \e[01;32m-h\e[0m, \e[01;32m--help\e[0m         Display this help message"
	echo -e "  \e[01;32m-v\e[0m, \e[01;32m--version\e[0m      Display version info"
}

# Function to display version
display_version() {
	echo -e "\e[01;33mtermux-fix-shebang\e[0m v1.1"
	echo -e "by PhateValleyman"
	echo -e "Jonas.Ned@outlook.com"
}

# Function to fix shebang in a single file
fix_shebang() {
	local file="$1"
	if sed -i -E "1 s@^#\!(.*)/[sx]?bin/(.*)@#\!/data/data/com.termux/files/usr/bin/\2@" "$file"; then
		echo -e "\e[01;36m$file\e[0m edited..."
	else
		echo -e "\e[01;31m$file\e[0m error..."
	fi
}

# Check if any arguments were provided
if [ $# = 0 -o "$1" = "-h" -o "$1" = "--help" ]; then
	display_usage
	exit 1
fi

# Process command-line options
while [[ $# -gt 0 ]]; do
	case $1 in
		-h|--help)
			display_usage
			exit 0
			;;
		-v|--version)
			display_version
			exit 0
			;;
		-a|--all)
			while IFS= read -r -d "" file; do
				fix_shebang "$file"
			done < <(find "$PWD" -type f -print0)
			exit 0
			;;
		*)
			break
			;;
	esac
done

# Iterate over each provided file
for file in "$@"; do
	fix_shebang "$(realpath "${file}")"
done
